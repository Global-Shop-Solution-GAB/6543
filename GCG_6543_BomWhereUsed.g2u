Program.Sub.ScreenSU.Start
Gui.Form..Create(BaseForm)
Gui.Form..Caption("Parts Pending Change")
Gui.Form..Size(806,543)
Gui.Form..MinX(0)
Gui.Form..MinY(0)
Gui.Form..Position(0,0)
Gui.Form..AlwaysOnTop(False)
Gui.Form..FontName("Tahoma")
Gui.Form..FontSize(8.25)
Gui.Form..ControlBox(True)
Gui.Form..MaxButton(True)
Gui.Form..MinButton(True)
Gui.Form..MousePointer(0)
Gui.Form..Moveable(True)
Gui.Form..Sizeable(True)
Gui.Form..ShowInTaskBar(True)
Gui.Form..TitleBar(True)
Gui.Form..Event(UnLoad,Form_UnLoad)
Gui.Form.frame1.Create(Frame)
Gui.Form.frame1.Enabled(True)
Gui.Form.frame1.Visible(True)
Gui.Form.frame1.Zorder(0)
Gui.Form.frame1.Size(797,71)
Gui.Form.frame1.Position(4,4)
Gui.Form.frame1.Caption("")
Gui.Form.frame1.FontName("Tahoma")
Gui.Form.frame1.FontSize(8.25)
Gui.Form.frame1.Anchor(13)
Gui.Form.lbl1.Create(Label,"Part:",True,24,13,0,5,5,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lbl1.BorderStyle(0)
Gui.Form.lbl1.Parent("frame1")
Gui.Form.txtPart.Create(TextBox,"",True,137,20,0,5,20,True,0,"Tahoma",8.25,,1)
Gui.Form.txtPart.Parent("frame1")
Gui.Form.cmdPartBrw.Create(Button)
Gui.Form.cmdPartBrw.Enabled(True)
Gui.Form.cmdPartBrw.Visible(True)
Gui.Form.cmdPartBrw.Zorder(0)
Gui.Form.cmdPartBrw.Size(24,23)
Gui.Form.cmdPartBrw.Position(146,18)
Gui.Form.cmdPartBrw.Caption("^")
Gui.Form.cmdPartBrw.FontName("Tahoma")
Gui.Form.cmdPartBrw.FontSize(8.25)
Gui.Form.cmdPartBrw.Parent("frame1")
Gui.Form.cmdPartBrw.Event(Click,cmdPartBrw_Click)
Gui.Form.cmdLoad.Create(Button)
Gui.Form.cmdLoad.Enabled(True)
Gui.Form.cmdLoad.Visible(True)
Gui.Form.cmdLoad.Zorder(0)
Gui.Form.cmdLoad.Size(75,23)
Gui.Form.cmdLoad.Position(173,18)
Gui.Form.cmdLoad.Caption("Load")
Gui.Form.cmdLoad.FontName("Tahoma")
Gui.Form.cmdLoad.FontSize(8.25)
Gui.Form.cmdLoad.Parent("frame1")
Gui.Form.cmdLoad.Event(Click,cmdLoad_Click)
Gui.Form.cmdUpload.Create(Button)
Gui.Form.cmdUpload.Enabled(True)
Gui.Form.cmdUpload.Visible(True)
Gui.Form.cmdUpload.Zorder(0)
Gui.Form.cmdUpload.Size(75,23)
Gui.Form.cmdUpload.Position(717,18)
Gui.Form.cmdUpload.Caption("Upload")
Gui.Form.cmdUpload.FontName("Tahoma")
Gui.Form.cmdUpload.FontSize(8.25)
Gui.Form.cmdUpload.Parent("frame1")
Gui.Form.cmdUpload.Event(Click,cmdUpload_Click)
Gui.Form.cmdUpload.Anchor(9)
Gui.Form.txtRowSize.Create(TextBox,"20",True,47,20,0,265,20,True,0,"Tahoma",8.25,,1)
Gui.Form.txtRowSize.Parent("frame1")
Gui.Form.txtRowSize.NumericOnly(2)
Gui.Form.cmdResize.Create(Button)
Gui.Form.cmdResize.Enabled(True)
Gui.Form.cmdResize.Visible(True)
Gui.Form.cmdResize.Zorder(0)
Gui.Form.cmdResize.Size(75,23)
Gui.Form.cmdResize.Position(317,18)
Gui.Form.cmdResize.Caption("Resize")
Gui.Form.cmdResize.FontName("Tahoma")
Gui.Form.cmdResize.FontSize(8.25)
Gui.Form.cmdResize.Parent("frame1")
Gui.Form.cmdResize.Event(Click,cmdResize_Click)
Gui.Form.lbl2.Create(Label,"Row Size:",True,47,13,0,265,5,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lbl2.BorderStyle(0)
Gui.Form.lbl2.Parent("frame1")
Gui.Form.txtNotes.Create(TextboxM)
Gui.Form.txtNotes.Enabled(True)
Gui.Form.txtNotes.Visible(True)
Gui.Form.txtNotes.Zorder(0)
Gui.Form.txtNotes.Size(156,64)
Gui.Form.txtNotes.Position(399,3)
Gui.Form.txtNotes.FontName("Tahoma")
Gui.Form.txtNotes.FontSize(8.25)
Gui.Form.txtNotes.Parent("frame1")
Gui.Form.cmdApply.Create(Button)
Gui.Form.cmdApply.Enabled(True)
Gui.Form.cmdApply.Visible(True)
Gui.Form.cmdApply.Zorder(0)
Gui.Form.cmdApply.Size(75,23)
Gui.Form.cmdApply.Position(558,18)
Gui.Form.cmdApply.Caption("Set Notes")
Gui.Form.cmdApply.FontName("Tahoma")
Gui.Form.cmdApply.FontSize(8.25)
Gui.Form.cmdApply.Parent("frame1")
Gui.Form.cmdApply.Event(Click,cmdApply_Click)
Gui.Form.cmdCheck.Create(Button)
Gui.Form.cmdCheck.Enabled(True)
Gui.Form.cmdCheck.Visible(True)
Gui.Form.cmdCheck.Zorder(0)
Gui.Form.cmdCheck.Size(75,23)
Gui.Form.cmdCheck.Position(637,18)
Gui.Form.cmdCheck.Caption("Top Parents")
Gui.Form.cmdCheck.FontName("Tahoma")
Gui.Form.cmdCheck.FontSize(8.25)
Gui.Form.cmdCheck.Parent("frame1")
Gui.Form.cmdCheck.Event(Click,cmdCheck_Click)
Gui.Form.cmdExport.Create(Button)
Gui.Form.cmdExport.Enabled(True)
Gui.Form.cmdExport.Visible(True)
Gui.Form.cmdExport.Zorder(0)
Gui.Form.cmdExport.Size(75,23)
Gui.Form.cmdExport.Position(717,44)
Gui.Form.cmdExport.Anchor(9)
Gui.Form.cmdExport.Caption("Export")
Gui.Form.cmdExport.FontName("Tahoma")
Gui.Form.cmdExport.FontSize(8.25)
Gui.Form.cmdExport.Parent("frame1")
Gui.Form.cmdExport.Event(Click,cmdExport_Click)
Gui.Form.GsGcDisplay.Create(GsGridControl)
Gui.Form.GsGcDisplay.Enabled(True)
Gui.Form.GsGcDisplay.Visible(True)
Gui.Form.GsGcDisplay.Zorder(0)
Gui.Form.GsGcDisplay.Size(794,428)
Gui.Form.GsGcDisplay.Position(5,80)
Gui.Form.GsGcDisplay.Anchor(15)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
Program.Sub.Preflight.End

Program.Sub.Main.Start
Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout
f.Intrinsic.Control.CallSub(checkCustomFolder)
f.Intrinsic.Control.CallSub(createDisplayDT)
f.Intrinsic.Control.CallSub(loadGridProperties)
gui.Form..Show
Program.Sub.Main.End

Program.Sub.createDisplayDT.Start
f.Intrinsic.Control.Try
	f.Data.DataTable.Create("displayDT", true)
	f.Data.DataTable.AddColumn("displayDT", "Selected", "Boolean", False)
	f.Data.DataTable.AddColumn("displayDT", "Part", "String")
	f.Data.DataTable.AddColumn("displayDT", "Sequence_BOM", "String")
	f.Data.DataTable.AddColumn("displayDT", "Parent", "String")
	f.Data.DataTable.AddColumn("displayDT", "Notes", "String")
	f.Data.Datatable.AddColumn("displayDT", "Bom_Checked", "Long", 0)
	
	f.Data.DataView.Create("displayDT", "displayDV", 22)
	f.Data.DataView.Create("displayDT", "bomDV", 22, "Bom_Checked = '0' and sequence_bom <> '0000'", "")
	f.Data.DataView.Create("displayDT", "topDV", 22, "Bom_Checked = '2' and sequence_bom = '0000'", "")
	f.Data.DataView.Create("displayDT", "disParentDV", 22, "sequence_bom = '0000'", "")
	f.Data.DataView.Create("displayDT", "selectedDV", 22, "Selected = 'True'", "")
	gui.Form.GsGcDisplay.AddGridviewFromDataview("displayGV", "displayDT", "displayDV")
	gui.Form.GsGcDisplay.MainView("displayGV")
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.createDisplayDT.End

Program.Sub.loadGridProperties.Start
v.Local.iCnt.Declare
v.Local.sFields.Declare
v.Local.iVisibleIndex.Declare

f.Intrinsic.Control.Try
	f.Intrinsic.String.Split(v.DataTable.displayDT.FieldNames, "*!*", v.Local.sFields)
	f.Intrinsic.Control.For(v.Local.iCnt, 0, v.Local.sFields.UBound, 1)
		gui.Form.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "HeaderFontBold", True)
		gui.Form.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "Visible", True)
		gui.Form.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "ReadOnly", True)
		gui.Form.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "AllowEdit", False)
		gui.Form.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "HeaderHAlignment", "Near")
		gui.Form.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "CellHAlignment", "Near")
		gui.Form.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "HeaderBackColor", v.Color.GSS)
		gui.Form.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "HeaderForeColor", v.Color.White)
	f.Intrinsic.Control.Next(v.Local.iCnt)
	
	'GridView Properties
	gui.Form.GsGcDisplay.BestFitColumns("displayGV")
	gui.Form.GsGcDisplay.SetGridviewProperty("displayGV", "OptionsViewColumnAutoWidth", False)
	'gui.Form.GsGcDisplay.SetGridviewProperty("displayGV", "OptionsViewShowAutoFilterRow", True)
	'gui.Form.GsGcDisplay.SetGridviewProperty("displayGV", "OptionsFindAlwaysVisible", True)
	'gui.Form.GsGcDisplay.SetGridviewProperty("displayGV", "Rowheight", 150)
	
	'Possible Column Properties
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Selected", "Width", 40)
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Notes", "Width", 200)
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Part", "Width", 120)
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Parent", "Width", 120)
	
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Selected", "ReadOnly", False)
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Selected", "AllowEdit", True)
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Notes", "ReadOnly", False)
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Notes", "AllowEdit", True)
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Notes", "CellWordWrap", "Wrap")
	'gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Default", "HeaderHAlignment", "Center")
	'gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Default", "CellHAlignment", "Center")
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Selected", "Caption", " ")
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Part", "Caption", "Part")
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Sequence_BOM", "Caption", "Seq")
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Parent", "Caption", "Parent")
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Notes", "Caption", "Notes")
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Bom_Checked", "Visible", False)
	'gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Default", "DisplayCustomDatetime", "d")
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Part", "AllowEdit", True)
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Parent", "AllowEdit", True)
	'VisibleIndex
	'gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Default", "VisibleIndex", v.Local.iVisibleIndex)
	'gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Default", "VisibleIndex", v.Local.iVisibleIndex.++)
	
	'Conditional Formatting
	gui.Form.GsGcDisplay.AddStyleFormatCondition("displayGV", "Bom_Checked", "TagName", "EQUAL", 2)
	gui.Form.GsGcDisplay.SetStyleFormatConditionProperty("displayGV", "Bom_Checked", "TagName", "ApplyToRow", True) 
	gui.Form.GsGcDisplay.SetStyleFormatConditionProperty("displayGV", "Bom_Checked", "TagName", "BackColor", v.Color.Yellow) 
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.loadGridProperties.End

Program.Sub.Form_UnLoad.Start
f.Intrinsic.Control.Try
	'End Program.
	f.Intrinsic.Control.End
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.Form_UnLoad.End

Program.Sub.cmdPartBrw_Click.Start
v.Local.sRet.Declare
f.Intrinsic.Control.Try
	'load Part
	f.Intrinsic.UI.SetBrowserHotTypeAhead(True)
	f.Intrinsic.UI.Browser(105, , v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sRet, =, "***CANCEL***")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	'Split Ret and set Part
	f.Intrinsic.String.Split(v.Local.sRet, "*!*", v.Local.sRet)
	gui.Form.txtPart.Text(v.Local.sRet(0))
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.cmdPartBrw_Click.End

Program.Sub.cmdLoad_Click.Start
v.Local.sPart.Declare
v.Local.sSQL.Declare
v.Local.sRet.Declare
v.Local.iCnt.Declare
v.Local.bParents.Declare
f.Intrinsic.Control.Try
'Try something	
	v.Local.sPart.Set(v.Screen.Form!txtPart.Text)
	f.Data.Datatable.DeleteRow("displayDT")
	f.Data.Datatable.AcceptChanges("displayDT")
	f.Intrinsic.UI.InvokeWaitDialog("Loading...")
	f.ODBC.Connection!con.OpenCompanyConnection
		f.Intrinsic.String.Build("Select distinct Part, Sequence_BOM, Parent from V_BOM_MSTR where part = '{0}'", v.Local.sPart, v.Local.sSQL)
		f.Data.Datatable.CreateFromSQL("bomDT", "con", v.Local.sSQL)		
		f.Data.Datatable.Merge("bomDT", "displayDT", false, 2)
		f.Data.Datatable.AcceptChanges("displayDT")
		f.Data.Datatable.Close("bomDT")
		
		f.Intrinsic.Control.If(v.DataTable.displayDT.RowCount, >, 0)		
			f.Intrinsic.Control.DoUntil(v.Local.bParents)
				'Get List of Parents
				f.Data.DataView.ToDataTableDistinct("displayDT", "bomDV", "parentDT", "Parent")
				f.Data.DataView.Create("parentDT", "parentDV", 22)
				f.Data.DataView.ToString("parentDT", "parentDV", "Parent", "*!*", "','", v.Local.sRet)
				f.Data.DataView.Close("parentDT", "parentDV")
				f.Data.Datatable.Close("parentDT")
				'Pull Parents date
				f.Intrinsic.String.Build("Select distinct Part, Sequence_BOM, Parent from V_BOM_MSTR where parent in ('{0}')  and Sequence_BOM = '0000'", v.Local.sRet, v.Local.sSQL)
				f.Data.Datatable.CreateFromSQL("parDT", "con", v.Local.sSQL)	
				'Pull Parents date
				f.Intrinsic.String.Build("Select distinct Part, Sequence_BOM, Parent from V_BOM_MSTR where part in ('{0}') and Sequence_BOM <> '0000'", v.Local.sRet, v.Local.sSQL)
				f.Data.Datatable.CreateFromSQL("bomDT", "con", v.Local.sSQL)	
				'Merge
				f.Data.Datatable.Merge("parDT", "displayDT", false, 2)
				f.Data.Datatable.AcceptChanges("displayDT")
				f.Data.Datatable.Close("parDT")			
				'Set current lines as checked.
				'f.Intrinsic.Control.If(v.DataTable.bomDT.RowCount, >, 0)
					f.Data.Datatable.SetValue("displayDT", -1, "Bom_Checked", 1)
				'f.Intrinsic.Control.EndIf			
				f.Data.Datatable.AcceptChanges("displayDT")
				'Merge
				f.Data.Datatable.Merge("bomDT", "displayDT", false, 2)
				f.Data.Datatable.AcceptChanges("displayDT")
				f.Data.Datatable.Close("bomDT")
				'Check if no further Lines
				f.Intrinsic.Control.If(v.DataView.displayDT!bomDV.RowCount, =, 0)
					v.Local.bParents.Set(True)
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.Loop
	
			'Loop
			f.Data.Datatable.AcceptChanges("displayDT")
			f.Intrinsic.Control.For(v.Local.iCnt, 0, v.DataView.displayDT!disParentDV.RowCount--, 1)
				f.Intrinsic.String.Build("Select * from V_BOM_MSTR where Part = '{0}'", v.DataView.displayDT!disParentDV(v.Local.iCnt).Parent!FieldValTrim, v.Local.sSQL)
				f.Data.Datatable.CreateFromSQL("checkParentDT", "con", v.Local.sSQL)
				f.Intrinsic.Control.If(v.DataTable.checkParentDT.RowCount, =, 0)
					f.Data.DataView.SetValue("displayDT", "disParentDV", v.Local.iCnt, "Bom_Checked", 2)
				f.Intrinsic.Control.EndIf
				f.Data.Datatable.Close("checkParentDT")
			f.Intrinsic.Control.Next(v.Local.iCnt)
			f.Intrinsic.UI.CloseWaitDialog
		f.Intrinsic.Control.Else
			f.Intrinsic.UI.Msgbox("No Parents found.")
			f.Intrinsic.UI.CloseWaitDialog
		f.Intrinsic.Control.EndIf
	f.ODBC.Connection!con.Close
	
	gui.Form.GsGcDisplay.BestFitColumns("displayGV")
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.CloseWaitDialog
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.cmdLoad_Click.End

Program.Sub.cmdUpload_Click.Start
v.Local.iCnt.Declare
v.Local.sParent.Declare
v.Local.sNotes.Declare
v.Local.sNewNotes.Declare
v.Local.sSQL.Declare
v.Local.sRet.Declare
v.Local.sSeq.Declare
v.Local.sChangeDate.Declare
v.Local.sChangeTime.Declare
v.Local.iSeqCol.Declare
v.Local.sSeqStr.Declare
f.Intrinsic.Control.Try
	'Set Variables.
	f.Intrinsic.String.Format(v.Ambient.Date, "YYYYMMDD", v.Local.sChangeDate)
	f.Intrinsic.String.Format(v.Ambient.Time, "HHNNSSSS", v.Local.sChangeTime)
	'Loop Through Selected Lines.
	f.ODBC.Connection!con.OpenCompanyConnection	
		f.Intrinsic.Control.For(v.Local.iCnt, 0, v.DataView.displayDT!selectedDV.RowCount--, 1)
			'Get Seq Varaible
			f.Intrinsic.Math.Add(v.Local.iCnt, 1, v.Local.iSeqCol)
			f.Intrinsic.String.LPad(v.Local.iSeqCol, "0", 3, v.Local.sSeqStr)
			'Set Variables.
			v.Local.sParent.Set(v.DataView.displayDT!selectedDV(v.Local.iCnt).Parent!FieldValTrim)
			v.Local.sNewNotes.Set(v.DataView.displayDT!selectedDV(v.Local.iCnt).Notes!FieldValTrim)
			v.Local.sSeq.Set(v.DataView.displayDT!selectedDV(v.Local.iCnt).Sequence_BOM!FieldValTrim)
			v.Local.sRet.Set("")
			'Pull Notes from DB
			f.Intrinsic.String.Build("Select * from BOM_NOTES where Parent = '{0}' and Parent_Seq = '{1}' and Parent_Ins = '00'", v.Local.sParent, v.Local.sSeq, v.Local.sSQL)
			f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, v.Local.sRet)
			'Check if Notes are existented.
			f.Intrinsic.Control.If(v.Local.sRet.Trim, =, "")
				'Insert Notes
				f.Intrinsic.String.Build("Insert into  BOM_NOTES (Parent, Parent_seq, Parent_Ins, Text) Values ('{0}', '{2}', '00', '{1}')", v.Local.sParent, v.Local.sNewNotes, v.Local.sSeq, v.Local.sSQL)
			f.Intrinsic.Control.Else
				'Update Notes.
				f.Intrinsic.String.Split(v.Local.sRet, "*!*", v.Local.sNotes)
				f.Intrinsic.String.Build("{0}{1}{2}", v.Local.sNotes(3), v.Ambient.NewLine, v.Local.sNewNotes, v.Local.sNewNotes)
				f.Intrinsic.String.Build("Update BOM_NOTES Set Text = '{0}' Where Parent = '{1}' and Parent_seq = '{2}' and Parent_Ins = '00'", v.Local.sNewNotes, v.Local.sParent, v.Local.sSeq, v.Local.sSQL)
			f.Intrinsic.Control.EndIf
			'Run SQL
			f.ODBC.Connection!con.Execute(v.Local.sSQL)
			'Update Bom Complete Flag
			f.Intrinsic.String.Build("Update BOM_MSTR Set Bom_Complete = ' ', date_last_chg = '{1}', time_last_chg = '{2}', last_chg_by = '{3}', last_chg_prog = 'GCG6543'  Where Parent = '{0}'", v.Local.sParent, v.Local.sChangeDate, v.Local.sChangeTime, v.Caller.User, v.Local.sSQL)
			'f.Intrinsic.String.Build("Update BOM_MSTR Set Bom_Complete = ' '  Where Parent = '{0}'", v.Local.sParent, v.Local.sSQL)
			f.ODBC.Connection!con.Execute(v.Local.sSQL)
			'Set Change
			f.Intrinsic.String.Build("Insert into  BOM_CHANGES (CHANGE_DATE, CHANGE_TIME, SEQ, BOM, BOM_SEQ, F_INSERT, ACTION, FIELD_NAME, F_BEFORE, F_AFTER, DATE_CHG, CHANGE_USER, CHANGE_PGM) Values ('{0}', '{1}', '{2}', '{3}', '{4}', '00', 'U', 'FLG_COMPLETE', 'Y', ' ', '{5}', '{6}', 'GCG6543')", v.Local.sChangeDate, v.Local.sChangeTime, v.Local.sSeqStr, v.Local.sParent, v.Local.sSeq, v.Ambient.Date.PervasiveDate, v.Caller.User, v.Local.sSQL)
			f.ODBC.Connection!con.Execute(v.Local.sSQL)
		f.Intrinsic.Control.Next(v.Local.iCnt)		
	f.ODBC.Connection!con.Close
	f.Intrinsic.UI.Msgbox("Complete")
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.cmdUpload_Click.End

Program.Sub.cmdResize_Click.Start
v.Local.iSize.Declare
f.Intrinsic.Control.Try
'Resize Rows.
	v.Local.iSize.Set(v.Screen.Form!txtRowSize.Text)
	gui.Form.GsGcDisplay.SetGridviewProperty("displayGV", "RowHeight", v.Local.iSize)
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.cmdResize_Click.End

Program.Sub.ErrorMsg.Start
v.Local.sError.Declare
Function.Intrinsic.Debug.Stop

'Generic Error message.
f.Intrinsic.String.Build("Project GCG_6543_BomWhereUsed.g2u {0}{0}Subroutine: {1}{0}Error: {2} with Description: {3}", v.Ambient.NewLine, v.Args.CurrentSub, v.Ambient.ErrorNumber, v.Ambient.ErrorDescription, v.Local.sError)
f.Intrinsic.UI.Msgbox(v.Local.sError)
Program.Sub.ErrorMsg.End

Program.Sub.cmdApply_Click.Start
v.Local.sNotes.Declare
f.Intrinsic.Control.Try
	v.Local.sNotes.Set(v.Screen.Form!txtNotes.Text)
	f.Intrinsic.String.Build("{0}{1}{2} {3} {4}", v.Local.sNotes, v.Ambient.NewLine, v.Screen.Form!txtPart.Text, v.Caller.User, v.Ambient.Date.PervasiveDate, v.Local.sNotes)
	gui.Form.txtNotes.Text(v.Local.sNotes)
	f.Data.DataView.SetValue("displayDT", "selectedDV", -1, "Notes", v.Local.sNotes)
	f.Data.Datatable.AcceptChanges("displayDT")
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.cmdApply_Click.End

Program.Sub.cmdCheck_Click.Start
f.Intrinsic.Control.Try
	f.Data.DataView.SetValue("displayDT", "topDV", -1, "Selected", True)
	f.Data.Datatable.AcceptChanges("displayDT")
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.cmdCheck_Click.End

Program.Sub.checkCustomFolder.Start
v.Local.sFolder.Declare
v.Local.bExists.Declare
f.Intrinsic.Control.Try
	f.Intrinsic.String.Build("{0}\CUSTOM\GCG_6543\", v.Caller.GlobalDir, v.Local.sFolder)
	f.Intrinsic.File.DirExists(v.Local.sFolder, v.Local.bExists)
	f.Intrinsic.Control.If(v.Local.bExists.Not)
		f.Intrinsic.File.CreateDir(v.Local.sFolder)
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.checkCustomFolder.End

Program.Sub.cmdExport_Click.Start
v.Local.bExcel.Declare
v.Local.sFilePath.Declare
f.Intrinsic.Control.Try
	f.Intrinsic.String.Build("{0}\CUSTOM\GCG_6543\{1}_Parts Pending Change_{2}", v.Caller.GlobalDir, v.Ambient.Date.PervasiveDate, v.Caller.User, v.Local.sFilePath)
	f.Automation.MSExcel.CheckPresence(v.Local.bExcel)
	f.Intrinsic.Control.If(v.Local.bExcel)
		f.Intrinsic.String.Build("{0}.xlsx", v.Local.sFilePath, v.Local.sFilePath)
		Gui.Form.GsGcDisplay.Export(V.Local.sFilePath, "xlsx")
	f.Intrinsic.Control.Else
		f.Intrinsic.String.Build("{0}.csv", v.Local.sFilePath, v.Local.sFilePath)
		F.Data.DataTable.SaveToCSV("displayDT", V.Local.sFilePath, True)
	f.Intrinsic.Control.EndIf
	
	F.Intrinsic.Task.ShellExec(V.Caller.Handle, "open", V.Local.sFilePath,"", "", 1)
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.cmdExport_Click.End

Program.Sub.Comments.Start
${$5$}$3.0.0.0$}$1
${$6$}$aanazco$}$20211208170224055$}$7aQAV3Tor/tR9bkuakHbuzQlHVuXCGOzWmgyCV8UX8gQGsJCpqnLpGs4dUdhZ0spXikjh8hrcgo=
Program.Sub.Comments.End